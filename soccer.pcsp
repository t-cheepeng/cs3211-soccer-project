var field[4] = [0,0,0,0];

var ballPos:{0..11} = 1; // team 1 always starts first.
hvar teamScore[2] = [0,0];
var team0Score = 0;
var team1Score = 0;
hvar time = 100;

GoalKeep0 = [ballPos == 0 && time > 0] pass{ballPos = 1; time--;} -> GoalKeep0 [] [time == 0] Skip;
Player0 = [ballPos == 1 && time > 0] shootOutcome0 [] [time == 0] Skip;
Player1 = [ballPos == 2 && time > 0] shootOutcome1 [] [time == 0] Skip;
GoalKeep1 = [ballPos == 3 && time > 0] pass{ballPos = 2; time--;} -> GoalKeep1 [] [time == 0] Skip;

shootOutcome0 = pcase {
	1: goal{team0Score = team0Score + 1; ballPos = 2; time--;} -> Player0
	1: miss{ballPos = 3; time--;} -> Player0 // TODO: make random choice for ballPos
};

shootOutcome1 = pcase {
	1: goal{team1Score = team1Score + 1; ballPos = 1; time--;} -> Player1
	1: miss{ballPos = 0; time--;} -> Player1 // TODO: make random choice for ballPos
};


PlayGame = Player1 || Player0 || GoalKeep1 || GoalKeep0;

#define timeIsZero time == 0;
#define team0Win team0Score > team1Score && timeIsZero;
#define team1Win team0Score < team1Score && timeIsZero;
#define draw team0Score == team1Score && timeIsZero;

#assert PlayGame reaches timeIsZero with prob;
#assert PlayGame reaches draw with prob;
#assert PlayGame reaches team1Win with prob;
#assert PlayGame reaches team0Win with prob;